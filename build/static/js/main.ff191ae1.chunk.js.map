{"version":3,"sources":["context/authentication/authenticationContext.js","bvc_logo.jpg","components/layout/Navbar.js","context/druglist/druglistContext.js","components/textbook/Chapters.js","TextbookImage1.jpg","components/textbook/Textbook.js","components/pages/Home.js","components/pages/About.js","components/quiz/Flashcard.js","components/quiz/FlashcardList.js","components/pages/Quiz.js","components/textbook/Chapter.js","components/pages/Chapter.js","components/textbook/Category.js","components/pages/Category.js","components/textbook/SubCategory.js","components/pages/SubCategory.js","components/authentication/Register.js","components/authentication/Login.js","LoginImage.jpg","components/routing/privateRoute.js","context/types.js","context/authentication/authenticationReducer.js","utils/setAuthenticationToken.js","context/authentication/AuthenticationState.js","context/druglist/druglistReducer.js","context/druglist/DruglistState.js","context/table/StateContext.js","context/table/useStateContent.js","components/table/TableRow.js","components/table/EditableTable.js","App.js","index.js"],"names":["authenticationContext","createContext","Navbar","title","icons","useContext","AuthenticationContext","isAuthenticated","logout","user","authenticationLinks","className","name","onClick","href","to","guestLinks","src","bvc_logo","defaultProps","druglistContext","Chapters","druglist","DruglistContext","console","log","chapters","Set","map","obj","chapter","categories","getCategories","swap","catagory","replace","filter","undefined","swapBackground","pathname","state","category","cat","Textbook","TextbookImage","Home","useEffect","loadUser","getDruglist","About","Flashcard","flashcard","useState","flip","setFlip","question","options","option","Answer","FlashcardList","flashcards","id","SAMPLE_FLASHCARDS","Quiz","Chapter","useParams","Category","subCategories","removeSafeParam","subCatagory","getSubCategories","subCategory","SubCategory","icon","drugnames","hasGeneric","drug","subCat","sub","speakit","word","a","document","getElementById","play","alternateName","getDrugnames","type","Register","props","register","history","push","email","studentID","password","passwordConfirm","setUser","onChange","e","target","value","onSubmit","preventDefault","htmlFor","required","Login","login","PrivateRoute","Component","component","rest","render","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTHENTICATION_ERROR","GET_DRUGLIST","action","payload","localStorage","setItem","token","removeItem","error","setAuthenticationToken","axios","defaults","headers","common","AuthenticationState","initialState","getItem","useReducer","authenticationReducer","dispatch","get","res","data","formData","config","post","response","msg","Provider","children","DruglistState","druglistReducer","drugaudio","getRandomId","Math","floor","random","toString","Array","_","items","x","i","rows","functions","rowId","colNo","rowIndex","findIndex","rowValue","rowItems","newState","Object","values","reducer","tempState","key","func","initialContext","StateContext","React","StateContextProvider","useStateContext","TableRow","memo","row","setLoading","onDelete","useCallback","fetch","method","body","JSON","stringify","_id","then","cell","headings","convertDataToRow","EditableTable","pageno","useHistory","Number","pageNoValue","setPageNoValue","loading","length","style","height","width","display","placeItems","goToPage","pageNo","flexGrow","padding","disabled","onKeyUp","margin","transform","h","slice","prevRows","drugsChanged","has","transformedData","drugs","App","exact","path","ReactDOM","StrictMode"],"mappings":"gLAIeA,G,MAFeC,2BCFf,MAA0B,qC,OCM5BC,EAAS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAChBH,GADmC,EAAZI,MACCC,qBAAWC,IAEjCC,EAAkCP,EAAlCO,gBAAiBC,EAAiBR,EAAjBQ,OAAQC,EAAST,EAATS,KAM3BC,EACH,eAAC,WAAD,WACG,qBAAIC,UAAU,gBAAd,mBAAqCF,GAAQA,EAAKG,QAClD,6BACG,oBAAGC,QARK,WACdL,KAO4BM,KAAK,KAA3B,UACG,mBAAGH,UAAU,wBADhB,eAIH,6BACG,cAAC,IAAD,CAAMI,GAAG,IAAT,wBAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,QAAT,oBAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,UAAT,uBAKHC,EACH,eAAC,WAAD,WACG,6BACG,cAAC,IAAD,CAAMD,GAAG,SAAT,qBAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEH,6BACG,cAAC,IAAD,CAAMA,GAAG,YAAT,2BAKT,OACG,sBAAKJ,UAAU,oBAAf,UACG,qBAAKM,IAAKC,EAAUP,UAAU,SAC9B,8BACG,6BACG,sBAAMA,UAAU,YAAhB,SAA6BR,QAGnC,6BAAKI,EAAkBG,EAAsBM,QAUtDd,EAAOiB,aAAe,CACnBhB,MAAO,sBACPC,MAAO,CACJ,6BACA,6BACA,uBAGSF,QC7EAkB,EAFSnB,0B,OCsNToB,EApNS,WACtB,IAEQC,EAFgBjB,qBAAWkB,GAE3BD,SACRE,QAAQC,IAAIH,GAEZ,IAAII,EAAQ,YAAO,IAAIC,IAAIL,EAASM,KAAI,SAAAC,GAAG,OAAIA,EAAIC,aAE/CC,EAAa,GACXC,EAAgB,SAAAF,GACpBG,GAAO,EAUPF,GATAA,EAAU,YACL,IAAIJ,IACLL,EAASM,KAAI,SAAAC,GACX,GAAIA,EAAIC,UAAYA,EAClB,OAAOD,EAAIK,SAASC,QAAQ,IAAK,WAKjBC,QAAO,SAAAP,GAAG,YAAYQ,IAARR,MAGpCI,GAAO,EACLK,EAAiB,WACrB,GAAIL,EAEF,OADAA,GAAO,EACA,UAETA,GAAO,GAOT,OACE,qBAAKtB,UAAU,aAAf,SACGe,EAASE,KAAI,SAAAE,GAAO,OACnB,sBAAKnB,UAAU,WAAf,UACE,oBAAIA,UAAU,2BAAd,SACE,cAAC,IAAD,CACEA,UAAU,iBACVI,GAAI,CAAEwB,SAAS,YAAD,OAAcT,GAAWU,MAAOV,GAFhD,SAIGA,MAGL,+BACGE,EAAcF,GACdC,EAAWH,KAAI,SAAAa,GAAQ,OACtB,oBAAI9B,UAAW2B,IAAf,SACE,cAAC,IAAD,CACEvB,GAAI,CAAEwB,SAAS,aAAD,OAAeE,GAAYD,MAAOC,GADlD,UApBUC,EAuBSD,EAtBxBC,EAAIP,QAAQ,IAAK,UADF,IAAAO,iBCpCX,MAA0B,2CCY1BC,EARS,WACtB,OACE,sBAAKhC,UAAU,iBAAf,UACE,qBAAKM,IAAK2B,IACV,cAAC,EAAD,QCYSC,EAfK,WAClB,IAAM7C,EAAwBK,qBAAWC,GACnCc,EAAkBf,qBAAWkB,GAMnC,OAJAuB,qBAAU,WACR9C,EAAsB+C,WACtB3B,EAAgB4B,gBACf,IAED,8BACE,cAAC,EAAD,OCTSC,EAJM,WACnB,OAAO,0D,OCoBMC,MArBR,YAAmC,IAAdC,EAAa,EAAbA,UAAa,EACfC,oBAAS,GADM,mBAChCC,EADgC,KAC1BC,EAD0B,KAGvC,OACE,sBACE3C,UAAS,kBAAa0C,EAAO,OAAS,IACtCxC,QAAS,kBAAMyC,GAASD,IAF1B,UAIE,sBAAK1C,UAAU,QAAf,UACGwC,EAAUI,SACX,qBAAK5C,UAAU,oBAAf,SACGwC,EAAUK,QAAQ5B,KAAI,SAAA6B,GACrB,OAAO,qBAAK9C,UAAU,mBAAf,SAAmC8C,YAIhD,qBAAK9C,UAAU,OAAf,SAAuBwC,EAAUO,aCLxBC,MAVR,YAAwC,IAAfC,EAAc,EAAdA,WAC9B,OACE,qBAAKjD,UAAU,YAAf,SACGiD,EAAWhC,KAAI,SAAAuB,GACd,OAAO,cAAC,EAAD,CAAWA,UAAWA,GAAgBA,EAAUU,UCsBzDC,EAAoB,CACxB,CACED,GAAI,EACJN,SAAU,2CACVG,OAAQ,SACRF,QAAS,CAAC,UAAW,SAAU,cAAe,YAEhD,CACEK,GAAI,EACJN,SAAU,uCACVG,OAAQ,aACRF,QAAS,CAAC,cAAe,YAAa,gBAAiB,gBAI5CO,EAxCK,WACM1D,qBAAWkB,GAU3BD,SAVR,IADwB,EAaY8B,mBAASU,GAbrB,mBAajBF,EAbiB,UAkBxB,OACE,sBAAKjD,UAAU,eAAf,UACE,cAAC,EAAD,CAAeiD,WAAYA,IAAe,QCkCjCI,EArDQ,WACrB,IAEQ1C,EAFgBjB,qBAAWkB,GAE3BD,SAEFQ,EAAYmC,cAAZnC,QACNA,EAAQK,QAAQ,KAAM,KACtB,IAAIJ,EAAa,GAebE,GAAO,EACLK,EAAiB,WACrB,GAAIL,EAEF,OADAA,GAAO,EACA,UAETA,GAAO,GAOT,OACE,sBAAKtB,UAAU,4BAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,oBAAIA,UAAU,oBAAd,SAAmCmB,MAErC,qBAAInB,UAAU,SAAd,UAhCkB,SAAAmB,GACpBG,GAAO,EAUPF,GATAA,EAAU,YACL,IAAIJ,IACLL,EAASM,KAAI,SAAAC,GACX,GAAIA,EAAIC,UAAYA,EAClB,OAAOD,EAAIK,SAASC,QAAQ,IAAK,WAKjBC,QAAO,SAAAP,GAAG,YAAYQ,IAARR,KAsBjCG,CAAcF,GACdC,EAAWH,KAAI,SAAAa,GAAQ,OACtB,oBAAI9B,UAAW2B,IAAf,SACE,cAAC,IAAD,CAAMvB,GAAI,CAAEwB,SAAS,aAAD,OAAeE,GAAYD,MAAOC,GAAtD,UAbcC,EAcKD,EAbpBC,EAAIP,QAAQ,IAAK,UADF,IAAAO,YCzBXZ,EARQ,WACrB,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OC0DSuD,EA3DS,WACrB,IAEQ5C,EAFgBjB,qBAAWkB,GAE3BD,SAEAmB,EAAawB,cAAbxB,SAEJ0B,EAAgB,GAehBlC,GAAO,EACLK,EAAiB,WACpB,GAAIL,EAED,OADAA,GAAO,EACA,UAEVA,GAAO,GAGJmC,EAAkB,SAAC1B,GACtB,OAAOA,EAAIP,QAAQ,IAAK,MAG3B,OACG,sBAAKxB,UAAU,4BAAf,UACG,qBAAKA,UAAU,8BAAf,SACG,oBAAIA,UAAU,oBAAd,SAAmCyD,EAAgB3B,OAEtD,qBAAI9B,UAAU,SAAd,UAhCmB,SAAC8B,GACvBR,GAAO,EAUPkC,GATAA,EAAa,YACP,IAAIxC,IACJL,EAASM,KAAI,SAACC,GACX,GAAIA,EAAIK,WAAakC,EAAgB3B,GAClC,OAAOZ,EAAIwC,YAAYlC,QAAQ,IAAK,WAKlBC,QAAO,SAACP,GAAD,YAAiBQ,IAARR,KAsBvCyC,CAAiB7B,GACjB0B,EAAcvC,KAAI,SAAC2C,GAAD,OAChB,oBAAI5D,UAAW2B,IAAf,SACG,cAAC,IAAD,CACGvB,GAAI,CACDwB,SAAS,iBAAD,OAAmBgC,GAC3B/B,MAAO+B,GAHb,SAMIH,EAAgBG,iBC5CvB9B,EARS,WACtB,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,O,yBCDO6D,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGpBnD,EAFgBjB,qBAAWkB,GAE3BD,SAEFiD,EAAgBN,cAAhBM,YACFG,EAAY,GAeZzC,GAAO,EACLK,EAAiB,WACrB,GAAIL,EAEF,OADAA,GAAO,EACA,UAETA,GAAO,GAGH0C,EAAa,SAAAC,GACjB,GAAe,IAAXA,EAAK,GACP,OACE,8BACE,sBAAMjE,UAAU,gBAAhB,SAAiCiE,EAAK,KAAW,IACjD,mBAAGjE,UAAW8D,QAMhBI,EAAS,SAAAC,GACb,OAAOA,EAAI3C,QAAQ,IAAK,MAIpB4C,EAAO,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sDACFC,SAASC,eAAeH,GAC9BI,OAFQ,2CAAH,sDAKb,OACE,sBAAKzE,UAAU,4BAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,oBAAIA,UAAU,oBAAd,SAAmCkE,EAAON,OAE5C,qBAAI5D,UAAU,SAAd,UAjDiB,SAAA4D,GACnBtC,GAAO,EAUPyC,GATAA,EAAS,YACJ,IAAI/C,IACLL,EAASM,KAAI,SAAAC,GACX,GAAIA,EAAIwC,cAAgBQ,EAAON,GAC7B,MAAO,CAAC1C,EAAI+C,KAAM/C,EAAIwD,qBAKRjD,QAAO,SAAAP,GAAG,YAAYQ,IAARR,KAuC/ByD,CAAaf,GACbG,EAAU9C,KAAI,SAAAgD,GAAI,OACjB,qBAAIjE,UAAW2B,IAAmB,UAAlC,UACE,oBAAGzB,QAAS,kBAAMkE,EAAQH,EAAK,KAA/B,UACE,uBAAOf,GAAIe,EAAK,GAAhB,SACE,wBACE3D,IAAG,qBAAgB2D,EAAK,GAArB,QACHW,KAAK,iBAGT,sBAAM5E,UAAU,gBAAhB,SAAiCiE,EAAK,KACtC,mBAAGjE,UAAW8D,OAEfE,EAAWC,gBAYxBJ,EAAYrD,aAAe,CACzBsD,KAAM,oBAEOD,QC/EA/B,EARS,WACtB,OACE,qBAAK9B,UAAU,MAAf,SACE,cAAC,EAAD,O,eCkGS6E,EArGE,SAAAC,GACf,IAAMzF,EAAwBK,qBAAWC,GAEjCoF,EAA8B1F,EAA9B0F,SAAUnF,EAAoBP,EAApBO,gBAElBuC,qBAAU,WAEJvC,GACFkF,EAAME,QAAQC,KAAK,OAEpB,CAACrF,EAAiBkF,EAAME,UAVH,MAYAvC,mBAAS,CAC/BxC,KAAM,GACNiF,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,gBAAiB,KAjBK,mBAYjBvF,EAZiB,KAYXwF,EAZW,KAoBhBrF,EAAsDH,EAAtDG,KAAMiF,EAAgDpF,EAAhDoF,MAAOC,EAAyCrF,EAAzCqF,UAAWC,EAA8BtF,EAA9BsF,SAAUC,EAAoBvF,EAApBuF,gBAEpCE,EAAW,SAAAC,GAAC,OAAIF,EAAQ,2BAAKxF,GAAN,kBAAa0F,EAAEC,OAAOxF,KAAOuF,EAAEC,OAAOC,UAWnE,OACE,qBAAK1F,UAAU,uBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,0CACU,sBAAMA,UAAU,iBAAhB,yBAEV,uBAAM2F,SAfK,SAAAH,GACfA,EAAEI,iBACFb,EAAS,CACP9E,OACAiF,QACAC,YACAC,cASE,UACE,gCACE,uBAAOS,QAAQ,OAAf,kBACA,uBACEjB,KAAK,OACL3E,KAAK,OACLyF,MAAOzF,EACPsF,SAAUA,EACVO,UAAQ,OAGZ,gCACE,uBAAOD,QAAQ,QAAf,2BACA,uBACEjB,KAAK,QACL3E,KAAK,QACLyF,MAAOR,EACPK,SAAUA,EACVO,UAAQ,OAGZ,gCACE,uBAAOD,QAAQ,YAAf,uBACA,uBACEjB,KAAK,OACL3E,KAAK,YACLyF,MAAOP,EACPI,SAAUA,EACVO,UAAQ,OAGZ,gCACE,uBAAOD,QAAQ,WAAf,sBACA,uBACEjB,KAAK,WACL3E,KAAK,WACLyF,MAAON,EACPG,SAAUA,EACVO,UAAQ,OAGZ,gCACE,uBAAOD,QAAQ,kBAAf,8BACA,uBACEjB,KAAK,WACL3E,KAAK,kBACLyF,MAAOL,EACPE,SAAUA,EACVO,UAAQ,OAGZ,uBACE9F,UAAU,4BACV4E,KAAK,SACLc,MAAM,sBCzBHK,GCvEA,IDID,SAAAjB,GACZ,IAAMzF,EAAwBK,qBAAWC,GAEjCqG,EAA2B3G,EAA3B2G,MAAOpG,EAAoBP,EAApBO,gBAEfuC,qBAAU,WAEJvC,GACFkF,EAAME,QAAQC,KAAK,OAEpB,CAACrF,EAAiBkF,EAAME,UAVN,MAYGvC,mBAAS,CAC/ByC,MAAO,GACPE,SAAU,KAdS,mBAYdtF,EAZc,KAYRwF,EAZQ,KAiBbJ,EAAoBpF,EAApBoF,MAAOE,EAAatF,EAAbsF,SAETG,EAAW,SAAAC,GAAC,OAAIF,EAAQ,2BAAKxF,GAAN,kBAAa0F,EAAEC,OAAOxF,KAAOuF,EAAEC,OAAOC,UASnE,OACE,qBAAK1F,UAAU,uBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,0CACU,sBAAMA,UAAU,iBAAhB,sBAEV,uBAAM2F,SAbK,SAAAH,GACfA,EAAEI,iBACFI,EAAM,CACJd,QACAE,cASE,UACE,gCACE,uBAAOS,QAAQ,QAAf,2BACA,uBACEjB,KAAK,QACL3E,KAAK,QACLyF,MAAOR,EACPK,SAAUA,EACVO,UAAQ,OAGZ,gCACE,uBAAOD,QAAQ,WAAWC,UAAQ,EAAlC,sBAGA,uBACElB,KAAK,WACL3E,KAAK,WACLyF,MAAON,EACPG,SAAUA,OAGd,uBACEX,KAAK,SACLc,MAAM,QACN1F,UAAU,wC,QE7CPiG,EAdM,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAGlDxG,EAFsBF,qBAAWC,GAEjCC,gBACR,OACE,cAAC,IAAD,2BACMwG,GADN,IAEEC,OAAQ,SAAAvB,GAAK,OACVlF,EAA6C,cAACsG,EAAD,eAAepB,IAA1C,cAAC,IAAD,CAAU1E,GAAG,gB,iBCZ3BkG,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAc,cACdC,EAAgB,gBAChBC,EAAa,aACbC,EAAS,SACTC,EAAuB,uBAGvBC,EAAe,eCCb,WAAChF,EAAOiF,GACrB,OAAQA,EAAOlC,MACb,KAAK4B,EACH,OAAO,2BACF3E,GADL,IAEEjC,iBAAiB,EACjBE,KAAMgH,EAAOC,UAEjB,KAAKT,EACL,KAAKG,EAGH,OADAO,aAAaC,QAAQ,QAASH,EAAOC,QAAQG,OACtC,uCACFrF,GACAiF,EAAOC,SAFZ,IAGEnH,iBAAiB,IAErB,KAAK2G,EACL,KAAKK,EACL,KAAKF,EACL,KAAKC,EAGH,OADAK,aAAaG,WAAW,SACjB,2BACFtF,GADL,IAEEqF,MAAO,KACPtH,iBAAiB,EACjBE,KAAM,KACNsH,MAAON,EAAOC,UAElB,QACE,OAAOlF,IC/BEwF,EARgB,SAAAH,GACzBA,EACFI,IAAMC,SAASC,QAAQC,OAAO,gBAAkBP,SAEzCI,IAAMC,SAASC,QAAQC,OAAO,iBCiH1BC,GAxGa,SAAA5C,GAC1B,IAAM6C,EAAe,CACnBT,MAAOF,aAAaY,QAAQ,SAC5BhI,gBAAiB,KACjBE,KAAM,KACNsH,MAAO,MAL0B,EAQTS,qBAAWC,EAAuBH,GARzB,mBAQ5B9F,EAR4B,KAQrBkG,EARqB,KAY7B3F,EAAQ,uCAAG,4BAAAkC,EAAA,6DAEX0C,aAAaE,OACfG,EAAuBL,aAAaE,OAHvB,kBAOKI,IAAMU,IAAI,uBAPf,OAOPC,EAPO,OASbF,EAAS,CACPnD,KAAM4B,EACNO,QAASkB,EAAIC,OAXF,gDAcbH,EAAS,CACPnD,KAAMgC,IAfK,yDAAH,qDAsBR7B,EAAQ,uCAAG,WAAMoD,GAAN,iBAAA7D,EAAA,6DACT8D,EAAS,CACbZ,QAAS,CACP,eAAgB,qBAHL,kBAQKF,IAAMe,KAAK,aAAcF,EAAUC,GARxC,OAQPH,EARO,OAUbF,EAAS,CACPnD,KAAM0B,EACNS,QAASkB,EAAIC,OAEf9F,IAda,gDAgBb2F,EAAS,CACPnD,KAAM2B,EACNQ,QAAS,KAAIuB,SAASJ,KAAKK,MAlBhB,yDAAH,sDAyBRvC,EAAK,uCAAG,WAAMmC,GAAN,iBAAA7D,EAAA,6DACN8D,EAAS,CACbZ,QAAS,CACP,eAAgB,qBAHR,kBAQQF,IAAMe,KAAK,sBAAuBF,EAAUC,GARpD,OAQJH,EARI,OAUVF,EAAS,CACPnD,KAAM6B,EACNM,QAASkB,EAAIC,OAEf9F,IAdU,gDAgBV2F,EAAS,CACPnD,KAAM8B,EACNK,QAAS,KAAIuB,SAASJ,KAAKK,MAlBnB,yDAAH,sDA2BX,OACE,cAAC,EAAsBC,SAAvB,CACE9C,MAAO,CACLwB,MAAOrF,EAAMqF,MACbtH,gBAAiBiC,EAAMjC,gBACvBE,KAAM+B,EAAM/B,KACZsH,MAAOvF,EAAMuF,MACbrC,WACA3C,WACA4D,QACAnG,OAZS,kBAAMkI,EAAS,CAAEnD,KAAM+B,MAGpC,SAYG7B,EAAM2D,YChHE,YAAC5G,EAAOiF,GACrB,OAAQA,EAAOlC,MACb,KAAKiC,EACH,OAAO,2BACFhF,GADL,IAEElB,SAAUmG,EAAOC,UAErB,QACE,OAAOlF,IC4GE6G,GAhHO,SAAA5D,GACpB,IAD6B,EAcH+C,qBAAWc,GAbhB,CACnBhI,SAAU,GACViI,UAAW,KAHgB,mBActB/G,EAdsB,KAcfkG,EAde,KAiBvB1F,EAAW,uCAAG,4BAAAiC,EAAA,+EAEEgD,IAAMU,IAAI,iBAFZ,OAEVC,EAFU,OAIhBF,EAAS,CAAEnD,KAAMiC,EAAcE,QAASkB,EAAIC,OAJ5B,gDAMhBH,EAAS,CACPnD,KLpBsB,iBKqBtBmC,QAAS,KAAIuB,SAASC,MARR,yDAAH,qDAmFjB,OACE,cAAC,EAAgBC,SAAjB,CACE9C,MAAO,CACL/E,SAAUkB,EAAMlB,SAChB0B,eAHJ,SAMGyC,EAAM2D,YC/GPI,GAAc,WACjB,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAqBC,YAQlCtB,IALO,YAAIuB,MAAM,KAAKjI,KAAI,SAACkI,GAAD,MAAQ,CAC5CjG,GAAI2F,KACJO,MAAO,YAAIF,MAAM,IAAIjI,KAAI,SAACoI,EAAGC,GAAJ,MAAU,cAGV,CACzBC,KAAM,KAGIC,GAAY,CACtB,WAAY,SAAC3H,EAAO0H,GAAR,mBAAC,eAAsB1H,GAAvB,IAA8B0H,UAC1C,iBAAkB,SAAC1H,EAAD,GAAqC,IAA3B4H,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOhE,EAAY,EAAZA,MACjCiE,EAAW9H,EAAM0H,KAAKK,WAAU,SAACP,GAAD,OAAOA,EAAEnG,KAAOuG,KAChDI,EAAWhI,EAAM0H,KAAKI,GACtBG,EAAWD,EAAST,MACpBW,EAAQ,2BACRlI,GADQ,IAEX0H,KAAMS,OAAOC,OAAPD,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACAnI,EAAM0H,MADN,GAAAS,OAAA,IAAAA,CAAA,GAEFL,EAFEK,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAGGH,GAHH,IAIAT,MAAOY,OAAOC,OAAPD,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAAmBF,GAAnB,GAAAE,OAAA,IAAAA,CAAA,GAA8BN,EAAQhE,YAKtD,OAAO,eAAKqE,IAEf,aAAc,SAAClI,EAAO4H,GAEnB,OAAO,2BACD5H,GADN,IAEG0H,KAAM1H,EAAM0H,KAAK9H,QAAO,SAAC4H,GAAD,OAAOA,EAAEnG,KAAOuG,QAG9C,UAAW,SAAC5H,GAAD,mBAAC,eACNA,GADK,IAER0H,KAAK,GAAD,mBACE1H,EAAM0H,MADR,CAED,CACGrG,GAAI2F,KACJO,MAAO,CACJ,OACA,iBACA,WACA,eACA,kBAOTc,GAAU,SAACrI,EAAOqG,GAErB,IAAIiC,EAAYtI,EAChB,IAAK,IAAIuI,KAAOlC,EAAM,CAInBiC,GAAYE,EAFCb,GADbY,EAAMA,IAGWD,EADEjC,EAAKkC,IAG3B,OAAOD,GAGJG,GAAiB,CAAC3C,GAAc,cACzB4C,GAAeC,gBAAoBF,IACnCG,GAAuB,SAAC,GAAkB,IAAhBhC,EAAe,EAAfA,SAAe,EACzB+B,aAAiBN,GAASvC,IADD,mBAC5C9F,EAD4C,KACrCkG,EADqC,KAEnD,OACG,cAACwC,GAAa/B,SAAd,CAAuB9C,MAAO,CAAC7D,EAAOkG,GAAtC,SACIU,KC1EGiC,GAAkB,kBAAMhL,qBAAW6K,KC+CjCI,GA7CEH,IAAMI,MAAK,YAA0B,IAAvBC,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,WACzBzI,EAAgB3C,qBAAWe,GAA3B4B,YAD0C,EAE5BqI,KAF4B,mBAExC3C,GAFwC,WAG5CgD,EAAWC,uBAAY,WAC1BF,GAAW,GACXG,MAAM,gBAAiB,CACpBC,OAAQ,SACRC,KAAMC,KAAKC,UAAU,CAAEC,IAAKT,EAAI3H,KAChCsE,QAAS,CAAE,eAAgB,sBAC3B+D,MAAK,WACLlJ,IAAckJ,MAAK,WAChBT,GAAW,SAGjB/C,EAAS,CAAE,aAAc8C,EAAI3H,OAC7B,CAAC6E,IACJ,OACG,qCACI8C,EAAIzB,MAAMnI,KAAI,SAACuK,EAAMlC,GAAP,OACZ,6BACG,uBACGtJ,UAAU,eACV4E,KAAK,OACLc,MAAO8F,EACPjG,SAAU,SAACC,GAAD,OACPuC,EAAS,CACN,iBAAkB,CACf0B,MAAOoB,EAAI3H,GACXwG,MAAOJ,EACP5D,MAAOF,EAAEC,OAAOC,iBAOlC,6BACG,wBAAQ1F,UAAU,MAAME,QAAS,kBAAM6K,KAAvC,4BCpCNU,GAAW,CACd,SACA,YACA,iBACA,WACA,eACA,WAGGC,GAAmB,SAACxD,GACvB,MAAO,CACJhF,GAAIgF,EAAKoD,IACTlC,MAAO,CACJlB,EAAKjE,KAAK,GACViE,EAAKxD,cAAc,GACnBwD,EAAK3G,SACL2G,EAAKxE,YACLwE,EAAK/G,WAsBRwK,GAAgB,WAAO,IACpBC,EAAWtI,cAAXsI,OACNA,GAAUA,EACV,IAAM5G,EAAU6G,cAHS,EAIInB,KAJJ,mBAIhBnB,EAJgB,KAIhBA,KAAQxB,EAJQ,OAKSrI,qBAAWe,GAArCE,EALiB,EAKjBA,SAAU0B,EALO,EAKPA,YALO,EAMaI,mBAASqJ,OAAOF,IAN7B,mBAMlBG,EANkB,KAMLC,EANK,OAOKvJ,oBAAS,GAPd,mBAOlBwJ,EAPkB,KAOTnB,EAPS,KAWzB3I,qBAAU,WACP4F,EAAS,CAAE,WAAYpH,EAASM,KAAI,SAACoI,GAAD,OAAOqC,GAAiBrC,UAC5D,CAAC1I,IACJ,IAyBMoK,EAAWC,uBAAY,SAACvB,GAC3B1B,EAAS,CAAE,aAAc0B,MACzB,IAEH,GAAwB,IAApB9I,EAASuL,QAAgBD,EAC1B,OACG,qBACGE,MAAO,CACJC,OAAQ,QACRC,MAAO,OACPC,QAAS,OACTC,WAAY,UALlB,SAQG,mBAAGvM,UAAU,mCAItB,IAAMwM,EAAW,SAACC,GACfzH,EAAQC,KAAR,gBAAsBwH,IACtBT,EAAeS,IAElB,OACG,sBAAKvJ,GAAG,aAAaiJ,MAAO,CAAEO,SAAU,EAAGC,QAAS,QAApD,UACG,sBAAK3M,UAAU,aAAf,UACG,wBACG4M,SAAqB,MAAXhB,EACV5L,UAAU,qBACVE,QAAS,WACNsM,EAASV,OAAOF,GAAU,IAJhC,SAOG,mBAAG5L,UAAU,wBAEhB,uBACG0F,MAAOqG,EACPnH,KAAK,SACL5E,UAAU,eACV6M,QAAS,SAACrH,GACO,UAAVA,EAAE4E,KACHoC,EAAST,IAGfxG,SAAU,SAACC,GAAD,OAAOwG,EAAexG,EAAEC,OAAOC,UAE5C,wBACGkH,SACG9D,KAAKC,MAAMpI,EAASuL,OAvFlB,MAuF4CJ,OAAOF,GAExD1L,QAAS,WACNsM,EAASV,OAAOF,GAAU,IAE7B5L,UAAU,qBAPb,SASG,mBAAGA,UAAU,4BAGnB,wBACGE,QAAS,WACN4K,GAAW,GACXG,MAAM,gBAAiB,CAAEC,OAAQ,QAASK,MAAK,SAAClC,GAC7ChH,IAAckJ,MAAK,SAAClC,GACjByB,GAAW,SAGjB0B,EAAS1D,KAAKC,MAAMpI,EAASuL,OAzGxB,MA2GRlM,UAAU,gBACVmM,MAAO,CACJE,MAAO,MACPS,OAAQ,WACRC,UAAW,mBAdjB,0BAmBA,wBAAO/M,UAAU,QAAjB,UACG,gCACG,6BACIyL,GAASxK,KAAI,SAAC+L,GAAD,OACX,6BAAKA,WAId,gCACIzD,EACG0D,MA9HC,GA+HCnB,OAAOF,GA/HR,IAgIEE,OAAOF,GAAU,IAEpB3K,KAAI,SAAC4J,EAAKvB,GAAN,OACF,+BACG,6BAAKA,IAAQ,IACb,cAAC,GAAD,CACGyB,SAAUA,EACVD,WAAYA,EAEZD,IAAKA,GADAA,EAAI3H,eAO3B,wBACGlD,UAAU,MACVmM,MAAO,CACJE,MAAO,MACPS,OAAQ,QACRC,UAAW,mBAEd7M,QAvIQ,WACd4K,GAAW,GACX,IAAMoC,EAAW,IAAIlM,IAClBL,EAASM,KAAI,SAACoI,GAAD,OAAO+B,KAAKC,UAAUK,GAAiBrC,GAAGD,WAGpD+D,EAAe5D,EAAK9H,QACvB,SAACoJ,GAAD,OAAUqC,EAASE,IAAIhC,KAAKC,UAAUR,EAAIzB,WAEvCiE,EAAkBF,EAAalM,KAAI,SAACoI,GAAD,MAvCrC,CACJiC,KAFoBT,EAwC6CxB,GAtCxDnG,GACTe,KAAM,CAAC4G,EAAIzB,MAAM,IACjB1E,cAAe,CAACmG,EAAIzB,MAAM,IAC1B7H,SAAUsJ,EAAIzB,MAAM,GACpB1F,YAAamH,EAAIzB,MAAM,GACvBjI,QAAS0J,EAAIzB,MAAM,IAPA,IAACyB,KAyCpBI,MAAM,gBAAiB,CACpBE,KAAMC,KAAKC,UAAU,CAClBiC,MAAOD,IAEVnC,OAAQ,OACR1D,QAAS,CACN,eAAgB,sBAEnB+D,MAAK,SAAClC,GACNhH,IAAckJ,MAAK,SAAClC,GACjByB,GAAW,SAGjBjK,QAAQC,IAAIqM,IAyGT,sBAeM3C,OAAMI,KAAKe,IC/KtB3E,aAAaE,OACdG,EAAuBL,aAAaE,OAGvC,IA8CeqG,GA9CH,WAAO,IACRlL,EAAgB3C,qBAAWe,GAA3B4B,YAIR,OAHAF,qBAAU,WACPE,MACA,IAEA,cAAC,GAAD,UACG,cAAC,GAAD,UACG,cAAC,IAAD,UACG,eAAC,WAAD,WACG,cAAC,EAAD,IACA,8BACG,eAAC,IAAD,WACG,cAAC,EAAD,CAAcmL,OAAK,EAACC,KAAK,IAAItH,UAAWjE,IACxC,cAAC,IAAD,CAAOsL,OAAK,EAACC,KAAK,YAAYtH,UAAWtB,IACzC,cAAC,IAAD,CAAO2I,OAAK,EAACC,KAAK,SAAStH,UAAWJ,IACtC,cAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,SAAStH,UAAW7D,IACtC,cAAC,IAAD,CAAOkL,OAAK,EAACC,KAAK,QAAQtH,UAAW/C,IACrC,cAAC,IAAD,CACGoK,OAAK,EACLC,KAAK,oBACLtH,UAAW9C,IAEd,cAAC,IAAD,CACGmK,OAAK,EACLC,KAAK,sBACLtH,UAAW5C,IAEd,cAAC,IAAD,CACGiK,OAAK,EACLC,KAAK,6BACLtH,UAAWtC,IAGd,cAAC,IAAD,CAAO2J,OAAK,EAACC,KAAK,gBAAlB,SACG,cAAC,GAAD,qBC7D3BC,IAASrH,OACN,cAAC,IAAMsH,WAAP,UACG,cAAC,GAAD,UACG,cAAC,GAAD,QAGNpJ,SAASC,eAAe,W","file":"static/js/main.ff191ae1.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst authenticationContext = createContext();\n\nexport default authenticationContext;\n","export default __webpack_public_path__ + \"static/media/bvc_logo.533ef572.jpg\";","import React, { Fragment, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AuthenticationContext from \"../../context/authentication/authenticationContext\";\nimport bvc_logo from \"../../bvc_logo.jpg\";\n\nexport const Navbar = ({ title, icons }) => {\n   const authenticationContext = useContext(AuthenticationContext);\n\n   const { isAuthenticated, logout, user } = authenticationContext;\n\n   const onLogout = () => {\n      logout();\n   };\n\n   const authenticationLinks = (\n      <Fragment>\n         <li className=\"space-right-1\">Hello {user && user.name}</li>\n         <li>\n            <a onClick={onLogout} href=\"#!\">\n               <i className=\"fas fa-sign-out-alt\" /> Logout\n            </a>\n         </li>\n         <li>\n            <Link to=\"/\">Textbook</Link>\n         </li>\n         <li>\n            <Link to=\"/quiz\">Quiz</Link>\n         </li>\n         <li>\n            <Link to=\"/about\">About</Link>\n         </li>\n         <li>\n            <Link to=\"/contact\">Contact</Link>\n         </li>\n         <li>\n            <Link to=\"/edit/1\">Edit</Link>\n         </li>\n      </Fragment>\n   );\n\n   const guestLinks = (\n      <Fragment>\n         <li>\n            <Link to=\"/about\">About</Link>\n         </li>\n         <li>\n            <Link to=\"/login\">Login</Link>\n         </li>\n         <li>\n            <Link to=\"/register\">Register</Link>\n         </li>\n      </Fragment>\n   );\n\n   return (\n      <div className=\"navbar bg-primary\">\n         <img src={bvc_logo} className=\"logo\"></img>\n         <div>\n            <h1>\n               <span className=\"title m-2\">{title}</span>\n            </h1>\n         </div>\n         <ul>{isAuthenticated ? authenticationLinks : guestLinks}</ul>\n      </div>\n   );\n};\n\nNavbar.propTypes = {\n   title: PropTypes.string.isRequired,\n   icons: PropTypes.array,\n};\n\nNavbar.defaultProps = {\n   title: \"Canadian Drug Speak\",\n   icons: [\n      \"fab fa-canadian-maple-leaf\",\n      \"fas fa-prescription-bottle\",\n      \"far fa-comment-alt\",\n   ],\n};\nexport default Navbar;\n","import { createContext } from \"react\";\n\nconst druglistContext = createContext();\n\nexport default druglistContext;\n","import React, { useContext } from \"react\";\nimport DruglistContext from \"../../context/druglist/druglistContext\";\nimport { Link } from \"react-router-dom\";\n\nexport const Chapters = () => {\n  const druglistContext = useContext(DruglistContext);\n\n  const { druglist } = druglistContext;\n  console.log(druglist);\n\n  let chapters = [...new Set(druglist.map(obj => obj.chapter))];\n\n  let categories = [];\n  const getCategories = chapter => {\n    swap = true;\n    categories = [\n      ...new Set(\n        druglist.map(obj => {\n          if (obj.chapter === chapter) {\n            return obj.catagory.replace(\"/\", \"_\");\n          }\n        })\n      ),\n    ];\n    categories = categories.filter(obj => obj !== undefined);\n  };\n\n  let swap = true;\n  const swapBackground = () => {\n    if (swap) {\n      swap = false;\n      return \"bg-grey\";\n    }\n    swap = true;\n  };\n\n  const removeSafeParam = cat => {\n    return cat.replace(\"_\", \"/\");\n  };\n\n  return (\n    <div className='grid-2 p-1'>\n      {chapters.map(chapter => (\n        <div className='card p-1'>\n          <h2 className='text-left m-top-bottom-1'>\n            <Link\n              className='text-secondary'\n              to={{ pathname: `/chapter/${chapter}`, state: chapter }}\n            >\n              {chapter}\n            </Link>\n          </h2>\n          <ul>\n            {getCategories(chapter)}\n            {categories.map(category => (\n              <li className={swapBackground()}>\n                <Link\n                  to={{ pathname: `/category/${category}`, state: category }}\n                >\n                  {removeSafeParam(category)}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n\n    //   <div className='bg-l'>\n    //       {chapters.map(chapter => (\n    //           <ChapterItem></ChapterItem>\n    //       ))}\n    //   </div>\n    // <div className='grid-2'>\n    //   <div className='card p-1'>\n    //     <h2 className='text-left'>\n    //       <Link\n    //         className='text-secondary'\n    //         onClick={() => DruglistContext.getChapter(this.id)}\n    //       >\n    //         Chapter 1\n    //       </Link>\n    //     </h2>\n    //     <div>\n    //       <ul className='dropdown-menu' aria-labelledby='dropdownMenuButton'>\n    //         <Fragment>\n    //           <li>\n    //             <Link to='/bacterialinfections'>Bacterial Infections</Link>\n    //           </li>\n    //         </Fragment>\n    //         <li className='bg-grey'>\n    //           <a className='dropdown-item' href='#'>\n    //             Fungal Infections{\" \"}\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a className='dropdown-item' href='#'>\n    //             Rhinitis\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a className='dropdown-item' href='#'>\n    //             Parasitic/Helminthic Infections\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a className='dropdown-item' href='#'>\n    //             Vaccines\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a className='dropdown-item' href='#'>\n    //             Allergies\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a className='dropdown-item' href='#'>\n    //             Cough{\" \"}\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a className='dropdown-item' href='#'>\n    //             Glaucoma\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a className='dropdown-item' href='#'>\n    //             Anaphylaxis\n    //           </a>\n    //         </li>\n    //       </ul>\n    //     </div>\n    //   </div>\n    //   <div className='card p-1'>\n    //     <h2 className='text-left'>\n    //       <Link\n    //         className='text-secondary'\n    //         onClick={() => DruglistContext.getChapter(this.id)}\n    //       >\n    //         Chapter 2\n    //       </Link>\n    //     </h2>\n    //     <div>\n    //       <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton'>\n    //         <li>\n    //           <a class='dropdown-item' href='#'>\n    //             Coagulation Disorders\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a class='dropdown-item' href='#'>\n    //             Dyslipidemia\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a class='dropdown-item' href='#'>\n    //             Peripheral Vascular Disease\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a class='dropdown-item' href='#'>\n    //             Anemia\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a class='dropdown-item' href='#'>\n    //             Electrolyte Imbalance\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a class='dropdown-item' href='#'>\n    //             Cardiovascular Disorders\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a class='dropdown-item' href='#'>\n    //             Shock\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a class='dropdown-item' href='#'>\n    //             Tuberculosis\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a class='dropdown-item' href='#'>\n    //             Viral Infections\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a class='dropdown-item' href='#'>\n    //             Asthma & Chronic Obstructive Pulmonary Disease (COPD)\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a class='dropdown-item' href='#'>\n    //             Nicotine Addiction\n    //           </a>\n    //         </li>\n    //         <li className='bg-grey'>\n    //           <a class='dropdown-item' href='#'>\n    //             Benign Prostatic Hyperplasia (BPH)\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a class='dropdown-item' href='#'>\n    //             Incontinence\n    //           </a>\n    //         </li>\n    //       </ul>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default Chapters;\n","export default __webpack_public_path__ + \"static/media/TextbookImage1.a8eb077d.jpg\";","import React from \"react\";\nimport Chapters from \"./Chapters\";\nimport TextbookImage from \"../../TextbookImage1.jpg\";\n\nexport const Textbook = () => {\n  return (\n    <div className='container no-p'>\n      <img src={TextbookImage}></img>\n      <Chapters />\n    </div>\n  );\n};\nexport default Textbook;\n\n{\n  /* <h1 className='m-1 p-1'>\n4<sup>th</sup> Edition\n</h1> */\n}\n","import React, { useContext, useEffect } from \"react\";\nimport AuthenticationContext from \"../../context/authentication/authenticationContext\";\nimport DruglistContext from \"../../context/druglist/druglistContext\";\nimport Textbook from \"../textbook/Textbook\";\n\nexport const Home = () => {\n  const authenticationContext = useContext(AuthenticationContext);\n  const druglistContext = useContext(DruglistContext);\n\n  useEffect(() => {\n    authenticationContext.loadUser();\n    druglistContext.getDruglist();\n  }, []);\n  return (\n    <div>\n      <Textbook />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nexport const About = () => {\n  return <div>This is the about page</div>;\n};\n\nexport default About;\n","import React, { useState } from \"react\";\n\nexport function Flashcard({ flashcard }) {\n  const [flip, setFlip] = useState(false);\n\n  return (\n    <div\n      className={`yadcard ${flip ? \"flip\" : \"\"}`}\n      onClick={() => setFlip(!flip)}\n    >\n      <div className='front'>\n        {flashcard.question}\n        <div className='flashcard-options'>\n          {flashcard.options.map(option => {\n            return <div className='flashcard-option'>{option}</div>;\n          })}\n        </div>\n      </div>\n      <div className='back'>{flashcard.Answer}</div>\n    </div>\n  );\n}\n\nexport default Flashcard;\n","import React from \"react\";\nimport Flashcard from \"./Flashcard\";\n\nexport function FlashcardList({ flashcards }) {\n  return (\n    <div className='card-grid'>\n      {flashcards.map(flashcard => {\n        return <Flashcard flashcard={flashcard} key={flashcard.id} />;\n      })}\n    </div>\n  );\n}\n\nexport default FlashcardList;\n","import React, { useState, useContext } from \"react\";\nimport FlashcardList from \"../quiz/FlashcardList\";\nimport DruglistContext from \"../../context/druglist/druglistContext\";\n\nexport const Quiz = () => {\n  const druglistContext = useContext(DruglistContext);\n  //Yad the druglist here now contains all of the drugs and their generic names in an array of objects in this format\n  //   {\n  //     drug: [\"penicillin G benzathine\"],\n  //     alternateName: [\"Bicillin LA\"],\n  //     catagory: \"Bacterial Infections\",\n  //     subCatagory: \"Penicillins\",\n  //     chapter: \"Chapter 1\"\n  //   }\n  //Try to pull all the names from here for your flashcards\n  const { druglist } = druglistContext;\n\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  return (\n    <div className='yadcontainer'>\n      <FlashcardList flashcards={flashcards} />{\" \"}\n    </div>\n  );\n};\n\nconst SAMPLE_FLASHCARDS = [\n  {\n    id: 1,\n    question: \"what is the generic name of Amoxicillin?\",\n    Answer: \"Amoxil\",\n    options: [\"Ampicin\", \"Amoxil\", \"Bicillin LA\", \"Orbenin\"],\n  },\n  {\n    id: 2,\n    question: \"Ampicin is the brand name of ______?\",\n    Answer: \"Ampicillin\",\n    options: [\"Methicillin\", \"Nafcillin\", \"dicloxacillin\", \"Ampicillin\"],\n  },\n];\n\nexport default Quiz;\n","import React, { useContext } from \"react\";\nimport DruglistContext from \"../../context/druglist/druglistContext\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Chapter = () => {\n  const druglistContext = useContext(DruglistContext);\n\n  const { druglist } = druglistContext;\n\n  var { chapter } = useParams();\n  chapter.replace(/-/g, \"/\");\n  let categories = [];\n  const getCategories = chapter => {\n    swap = true;\n    categories = [\n      ...new Set(\n        druglist.map(obj => {\n          if (obj.chapter === chapter) {\n            return obj.catagory.replace(\"/\", \"_\");\n          }\n        })\n      ),\n    ];\n    categories = categories.filter(obj => obj !== undefined);\n  };\n\n  let swap = true;\n  const swapBackground = () => {\n    if (swap) {\n      swap = false;\n      return \"bg-grey\";\n    }\n    swap = true;\n  };\n\n  const removeSafeParam = cat => {\n    return cat.replace(\"_\", \"/\");\n  };\n\n  return (\n    <div className='container shadow-box no-p'>\n      <div className='container-tall bg-secondary'>\n        <h2 className='text-left p-title'>{chapter}</h2>\n      </div>\n      <ul className='p-page'>\n        {getCategories(chapter)}\n        {categories.map(category => (\n          <li className={swapBackground()}>\n            <Link to={{ pathname: `/category/${category}`, state: category }}>\n              {removeSafeParam(category)}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Chapter;\n\n{\n  /* <div className=''>\n        <div className='m-1 drugnames'>\n          <ul className='dropdown-menu' aria-labelledby='dropdownMenuButton'>\n            <Fragment>\n              <li>\n                <Link to='/bacterialinfections'>Bacterial Infections</Link>\n              </li>\n            </Fragment>\n            <li className='bg-grey'>\n              <a className='dropdown-item' href='#'>\n                Fungal Infections{\" \"}\n              </a>\n            </li>\n            <li>\n              <a className='dropdown-item' href='#'>\n                Rhinitis\n              </a>\n            </li>\n            <li className='bg-grey'>\n              <a className='dropdown-item' href='#'>\n                Parasitic/Helminthic Infections\n              </a>\n            </li>\n            <li>\n              <a className='dropdown-item' href='#'>\n                Vaccines\n              </a>\n            </li>\n            <li className='bg-grey'>\n              <a className='dropdown-item' href='#'>\n                Allergies\n              </a>\n            </li>\n            <li>\n              <a className='dropdown-item' href='#'>\n                Cough{\" \"}\n              </a>\n            </li>\n            <li className='bg-grey'>\n              <a className='dropdown-item' href='#'>\n                Glaucoma\n              </a>\n            </li>\n            <li>\n              <a className='dropdown-item' href='#'>\n                Anaphylaxis\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div> */\n}\n","import React from \"react\";\nimport Chapter from \"../textbook/Chapter\";\n\nexport const chapter = () => {\n  return (\n    <div className='p-1'>\n      <Chapter />\n    </div>\n  );\n};\n\nexport default chapter;\n","import React, { useContext } from \"react\";\nimport DruglistContext from \"../../context/druglist/druglistContext\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Category = () => {\n   const druglistContext = useContext(DruglistContext);\n\n   const { druglist } = druglistContext;\n\n   const { category } = useParams();\n\n   let subCategories = [];\n   const getSubCategories = (category) => {\n      swap = true;\n      subCategories = [\n         ...new Set(\n            druglist.map((obj) => {\n               if (obj.catagory === removeSafeParam(category)) {\n                  return obj.subCatagory.replace(\"/\", \"_\");\n               }\n            })\n         ),\n      ];\n      subCategories = subCategories.filter((obj) => obj !== undefined);\n   };\n\n   let swap = true;\n   const swapBackground = () => {\n      if (swap) {\n         swap = false;\n         return \"bg-grey\";\n      }\n      swap = true;\n   };\n\n   const removeSafeParam = (cat) => {\n      return cat.replace(\"_\", \"/\");\n   };\n\n   return (\n      <div className=\"container shadow-box no-p\">\n         <div className=\"container-tall bg-secondary\">\n            <h2 className=\"text-left p-title\">{removeSafeParam(category)}</h2>\n         </div>\n         <ul className=\"p-page\">\n            {getSubCategories(category)}\n            {subCategories.map((subCategory) => (\n               <li className={swapBackground()}>\n                  <Link\n                     to={{\n                        pathname: `/sub-category/${subCategory}`,\n                        state: subCategory,\n                     }}\n                  >\n                     {removeSafeParam(subCategory)}\n                  </Link>\n               </li>\n            ))}\n         </ul>\n      </div>\n   );\n};\n\nexport default Category;\n","import React from \"react\";\nimport Category from \"../textbook/Category\";\n\nexport const category = () => {\n  return (\n    <div className='p-1'>\n      <Category />\n    </div>\n  );\n};\n\nexport default category;\n","import React, { useContext } from \"react\";\nimport DruglistContext from \"../../context/druglist/druglistContext\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport const SubCategory = ({ icon }) => {\n  const druglistContext = useContext(DruglistContext);\n\n  const { druglist } = druglistContext;\n\n  var { subCategory } = useParams();\n  let drugnames = [];\n  const getDrugnames = subCategory => {\n    swap = true;\n    drugnames = [\n      ...new Set(\n        druglist.map(obj => {\n          if (obj.subCatagory === subCat(subCategory)) {\n            return [obj.drug, obj.alternateName];\n          }\n        })\n      ),\n    ];\n    drugnames = drugnames.filter(obj => obj !== undefined);\n  };\n\n  let swap = true;\n  const swapBackground = () => {\n    if (swap) {\n      swap = false;\n      return \"bg-grey\";\n    }\n    swap = true;\n  };\n\n  const hasGeneric = drug => {\n    if (drug[1] != \"\") {\n      return (\n        <a>\n          <span className='space-right-2'>{drug[1]}</span>{\" \"}\n          <i className={icon}></i>\n        </a>\n      );\n    }\n  };\n\n  const subCat = sub => {\n    return sub.replace(\"_\", \"/\");\n  };\n\n  // Get DrugAudio\n  const speakit = async word => {\n    let audio = document.getElementById(word);\n    audio.play();\n  };\n\n  return (\n    <div className='container shadow-box no-p'>\n      <div className='container-tall bg-secondary'>\n        <h2 className='text-left p-title'>{subCat(subCategory)}</h2>\n      </div>\n      <ul className='p-page'>\n        {getDrugnames(subCategory)}\n        {drugnames.map(drug => (\n          <li className={swapBackground() + \" grid-2\"}>\n            <a onClick={() => speakit(drug[0])}>\n              <audio id={drug[0]}>\n                <source\n                  src={`/api/audio/${drug[0]}.mp3`}\n                  type='audio/mpeg'\n                ></source>\n              </audio>\n              <span className='space-right-2'>{drug[0]}</span>\n              <i className={icon}></i>\n            </a>\n            {hasGeneric(drug)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nSubCategory.propTypes = {\n  icon: PropTypes.string,\n};\n\nSubCategory.defaultProps = {\n  icon: \"fas fa-volume-up\",\n};\nexport default SubCategory;\n\n{\n  /* <Link\n              to={{\n                pathname: `/drug/${drug[0]}`,\n                state: drug[0],\n              }}\n            >\n              {drug[0]}\n            </Link> */\n}\n\n/* <div className='container shadow-box no-p'>\n      <div className='container-tall bg-secondary'>\n        <h1>Bacterial Infections</h1>\n      </div>\n      <div className='container '>\n        <h2 className='text-left text-secondary'>Penicillins</h2>\n      </div>\n      <div className=''>\n        <div className='m-1 drugnames'>\n          {/* <Classifications></Classifications> \n          <ul>\n            {\" \"}\n            <li className='grid-2 no-gap'>\n              <a to='/' name='amoxicillin' onClick={amoxicillin}>\n                <span className='space-right-2'>amoxicillin</span>\n                <i className={icon}></i>\n              </a>\n              <a className='text-danger' onClick={textToSpeech}>\n                <span className='space-right-2'>Amoxil</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li className='bg-grey grid-2 no-gap'>\n              <a href='#'>\n                <span className='space-right-2'>ampicillin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n              <a className='text-danger' onClick={textToSpeech}>\n                <span className='space-right-2'>Ampicin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li>\n              <a className='dropdown-item' href='#'>\n                <span className='space-right-2'>benzathine penicillin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li className='bg-grey grid-2 no-gap'>\n              <a href='#'>\n                <span className='space-right-2'>cloxacillin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n              <a className='text-danger' onClick={textToSpeech}>\n                <span className='space-right-2'>Orbenin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li>\n              <a className='dropdown-item' href='#'>\n                <span className='space-right-2'>methacillin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li className='bg-grey'>\n              <a className='dropdown-item' href='#'>\n                <span className='space-right-2'>nafcillin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li>\n              <a className='dropdown-item' href='#'>\n                <span className='space-right-2'>oxacillin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li className='bg-grey'>\n              <a className='dropdown-item' href='#'>\n                <span className='space-right-2'>penacillin G benzathine</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li className='grid-2 no-gap'>\n              <a href='#'>\n                {\" \"}\n                <span className='space-right-2'>\n                  penicillin V potassium\n                </span>{\" \"}\n                <i className={icon}></i>\n              </a>\n              <a className='text-danger' onClick={textToSpeech}>\n                <span className='space-right-2'>Bicillin LA</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li className='bg-grey grid-2 no-gap'>\n              <a href='#'>\n                {\" \"}\n                <span className='space-right-2'>piperacillin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n              <a className='text-danger' onClick={textToSpeech}>\n                <span className='space-right-2'>Pen-VK</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li className='grid-2 no-gap'>\n              <a href='#'>\n                <span className='space-right-2'>procain penicillin G </span>{\" \"}\n                <i className={icon}></i>\n              </a>\n              <a className='text-danger' onClick={textToSpeech}>\n                <span className='space-right-2'>Pipracil</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n            <li className='bg-grey'>\n              <a className='dropdown-item' href='#'>\n                <span className='space-right-2'>tiracillin</span>{\" \"}\n                <i className={icon}></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div> */\n","import React from \"react\";\nimport SubCategory from \"../textbook/SubCategory\";\n\nexport const category = () => {\n  return (\n    <div className='p-1'>\n      <SubCategory />\n    </div>\n  );\n};\n\nexport default category;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport AuthenticationContext from \"../../context/authentication/authenticationContext\";\n\nconst Register = props => {\n  const authenticationContext = useContext(AuthenticationContext);\n\n  const { register, isAuthenticated } = authenticationContext;\n\n  useEffect(() => {\n    // If the user is authenticated redirect to the / route\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n  }, [isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    studentID: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n  });\n\n  const { name, email, studentID, password, passwordConfirm } = user;\n\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    register({\n      name,\n      email,\n      studentID,\n      password,\n    });\n  };\n  return (\n    <div className='login-background p-3'>\n      <div className='form-container transparent'>\n        <h1>\n          Account <span className='text-secondary'>Register</span>\n        </h1>\n        <form onSubmit={onSubmit}>\n          <div>\n            <label htmlFor='name'>Name</label>\n            <input\n              type='text'\n              name='name'\n              value={name}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='email'>Email-Address</label>\n            <input\n              type='email'\n              name='email'\n              value={email}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='studentID'>StudentID</label>\n            <input\n              type='text'\n              name='studentID'\n              value={studentID}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='password'>Password</label>\n            <input\n              type='password'\n              name='password'\n              value={password}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='passwordConfirm'>Confirm Password</label>\n            <input\n              type='password'\n              name='passwordConfirm'\n              value={passwordConfirm}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <input\n            className='btn btn-primary btn-block'\n            type='submit'\n            value='Register'\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport AuthenticationContext from \"../../context/authentication/authenticationContext\";\nimport LoginImage from \"../../LoginImage.jpg\";\n\nconst Login = props => {\n  const authenticationContext = useContext(AuthenticationContext);\n\n  const { login, isAuthenticated } = authenticationContext;\n\n  useEffect(() => {\n    // If the user is authenticated redirect to the / route\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n  }, [isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = user;\n\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login({\n      email,\n      password,\n    });\n  };\n  return (\n    <div className='login-background p-4'>\n      <div className='form-container transparent'>\n        <h1>\n          Account <span className='text-secondary'>Login</span>\n        </h1>\n        <form onSubmit={onSubmit}>\n          <div>\n            <label htmlFor='email'>Email-Address</label>\n            <input\n              type='email'\n              name='email'\n              value={email}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='password' required>\n              Password\n            </label>\n            <input\n              type='password'\n              name='password'\n              value={password}\n              onChange={onChange}\n            />\n          </div>\n          <input\n            type='submit'\n            value='Login'\n            className='btn btn-primary btn-block'\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/LoginImage.9ce2984e.jpg\";","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthenticationContext from \"../../context/authentication/authenticationContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authenticationContext = useContext(AuthenticationContext);\n\n  const { isAuthenticated } = authenticationContext;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isAuthenticated ? <Redirect to='/login' /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","export const REGISTER_SUCCESS = \"REGISTER SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER FAIL\";\nexport const USER_LOADED = \"USER LOADED\";\nexport const LOGIN_SUCCESS = \"LOGIN SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const AUTHENTICATION_ERROR = \"AUTHENTICATION ERROR\";\nexport const CLEAR_ERRORS = \"CLEAR ERRORS\";\n\nexport const GET_DRUGLIST = \"GET_DRUGLIST\";\nexport const DRUGLIST_ERROR = \"DRUGLIST_ERROR\";\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n  LOGOUT,\n  AUTHENTICATION_ERROR,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      //  Place the token that is returned into local storage\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n      };\n    case REGISTER_FAIL:\n    case AUTHENTICATION_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      //  Remove the token from local storage\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        user: null,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import axios from \"axios\";\n\nconst setAuthenticationToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthenticationToken;\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"./authenticationContext\";\nimport authenticationReducer from \"./authenticationReducer\";\nimport setAuthenticationToken from \"../../utils/setAuthenticationToken\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n  LOGOUT,\n  AUTHENTICATION_ERROR,\n} from \"../types\";\n\nconst AuthenticationState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    user: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authenticationReducer, initialState);\n\n  //    Load User\n  //    This checks which user is logged in and authenticates the user\n  const loadUser = async () => {\n    // load token into default headers\n    if (localStorage.token) {\n      setAuthenticationToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get(\"/api/authentication\");\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTHENTICATION_ERROR,\n      });\n    }\n  };\n\n  //    Register User\n  //    This will register a new user and get a json web token back\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/users\", formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  //    Login User\n  //    This logs the user in and gets a token\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.post(\"/api/authentication\", formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg,\n      });\n    }\n  };\n\n  //    Logout\n  //    This logs the user out and destroys the current token\n  const logout = () => dispatch({ type: LOGOUT });\n\n  return (\n    <AuthenticationContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n      }}\n    >\n      {props.children}\n    </AuthenticationContext.Provider>\n  );\n};\n\nexport default AuthenticationState;\n","import { GET_DRUGLIST } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_DRUGLIST:\n      return {\n        ...state,\n        druglist: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport druglistContext from \"./druglistContext\";\nimport druglistReducer from \"./druglistReducer\";\nimport { GET_DRUGLIST, DRUGLIST_ERROR } from \"../types\";\n\nconst DruglistState = props => {\n  const initialState = {\n    druglist: [],\n    drugaudio: [],\n  };\n  // const initialState = {\n  //   chapters: [],\n  //   chapter: [],\n  //   category: [],\n  //   classification: [],\n  //   drugname: [],\n  //   error: null,\n  // };\n\n  const [state, dispatch] = useReducer(druglistReducer, initialState);\n\n  // Get Druglist\n  const getDruglist = async () => {\n    try {\n      const res = await axios.get(\"/api/druglist\");\n\n      dispatch({ type: GET_DRUGLIST, payload: res.data });\n    } catch (err) {\n      dispatch({\n        type: DRUGLIST_ERROR,\n        payload: err.response.msg,\n      });\n    }\n  };\n\n  // // Get Chapters\n  // const getChapters = async () => {\n  //   try {\n  //     const res = await axios.get(\"/\");\n\n  //     dispatch({ type: GET_CHAPTERS, payload: res.data });\n  //   } catch (err) {\n  //     dispatch({\n  //       type: CHAPTERS_ERROR,\n  //       payload: err.response.msg,\n  //     });\n  //   }\n  // };\n\n  // // Get Chapter\n  // const getChapter = async () => {\n  //   try {\n  //     const res = await axios.get(\"/api/chapter\");\n\n  //     dispatch({ type: GET_CHAPTER, payload: res.data });\n  //   } catch (err) {\n  //     dispatch({\n  //       type: CHAPTER_ERROR,\n  //       payload: err.response.msg,\n  //     });\n  //   }\n  // };\n\n  // // Get Category\n  // const getCategory = async () => {\n  //   try {\n  //     const res = await axios.get(\"/api/category\");\n\n  //     dispatch({ type: GET_CATEGORY, payload: res.data });\n  //   } catch (err) {\n  //     dispatch({\n  //       type: CATEGORY_ERROR,\n  //       payload: err.response.msg,\n  //     });\n  //   }\n  // };\n\n  // // Get Classification\n  // const getClassification = async () => {\n  //   try {\n  //     const res = await axios.get(\"/api/classfication\");\n\n  //     dispatch({ type: GET_CLASSIFICATION, payload: res.data });\n  //   } catch (err) {\n  //     dispatch({\n  //       type: Chapter_ERROR,\n  //       payload: err.response.msg,\n  //     });\n  //   }\n  // };\n\n  // // Get DrugName\n  // const getDrugName = async () => {\n  //   try {\n  //     const res = await axios.get(\"/api/drugname\");\n\n  //     dispatch({ type: GET_DRUGNAME, payload: res.data });\n  //   } catch (err) {\n  //     dispatch({\n  //       type: DRUGNAME_ERROR,\n  //       payload: err.response.msg,\n  //     });\n  //   }\n  // };\n\n  return (\n    <druglistContext.Provider\n      value={{\n        druglist: state.druglist,\n        getDruglist,\n      }}\n    >\n      {props.children}\n    </druglistContext.Provider>\n  );\n};\n\nexport default DruglistState;\n","import * as React from \"react\";\r\n\r\nconst getRandomId = () => {\r\n   return Math.floor(Math.random() * 10000000).toString();\r\n};\r\n\r\nconst initialData = [...Array(10)].map((_) => ({\r\n   id: getRandomId(),\r\n   items: [...Array(3)].map((x, i) => \"Data\"),\r\n}));\r\n\r\nexport const initialState = {\r\n   rows: [],\r\n};\r\n\r\nexport const functions = {\r\n   \"set-rows\": (state, rows) => ({ ...state, rows }),\r\n   \"set-cell-value\": (state, { rowId, colNo, value }) => {\r\n      const rowIndex = state.rows.findIndex((x) => x.id === rowId);\r\n      const rowValue = state.rows[rowIndex];\r\n      const rowItems = rowValue.items;\r\n      const newState = {\r\n         ...state,\r\n         rows: Object.values({\r\n            ...state.rows,\r\n            [rowIndex]: {\r\n               ...rowValue,\r\n               items: Object.values({ ...rowItems, [colNo]: value }),\r\n            },\r\n         }),\r\n      };\r\n      // console.log(newState);\r\n      return { ...newState };\r\n   },\r\n   \"delete-row\": (state, rowId) => {\r\n      // console.log(rowId + \" deleted\");\r\n      return {\r\n         ...state,\r\n         rows: state.rows.filter((x) => x.id !== rowId),\r\n      };\r\n   },\r\n   \"add-row\": (state) => ({\r\n      ...state,\r\n      rows: [\r\n         ...state.rows,\r\n         {\r\n            id: getRandomId(),\r\n            items: [\r\n               \"Name\",\r\n               \"Altername Name\",\r\n               \"Category\",\r\n               \"Sub Category\",\r\n               \"Chapter\",\r\n            ],\r\n         },\r\n      ],\r\n   }),\r\n};\r\n\r\nconst reducer = (state, data) => {\r\n   // console.log(\"reduere function called\");\r\n   let tempState = state;\r\n   for (let key in data) {\r\n      key = key;\r\n      const func = functions[key];\r\n      const dataToPass = data[key];\r\n      tempState = func(tempState, dataToPass);\r\n   }\r\n   return tempState;\r\n};\r\n\r\nconst initialContext = [initialState, () => {}];\r\nexport const StateContext = React.createContext(initialContext);\r\nexport const StateContextProvider = ({ children }) => {\r\n   const [state, dispatch] = React.useReducer(reducer, initialState);\r\n   return (\r\n      <StateContext.Provider value={[state, dispatch]}>\r\n         {children}\r\n      </StateContext.Provider>\r\n   );\r\n};\r\nexport const x = 3;\r\n","import { useContext } from \"react\";\r\nimport { StateContext } from \"./StateContext\";\r\n\r\nexport const useStateContext = () => useContext(StateContext);\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport druglistContext from \"../../context/druglist/druglistContext\";\r\n\r\nimport { useStateContext } from \"../../context/table/useStateContent\";\r\n\r\nconst TableRow = React.memo(({ row, setLoading }) => {\r\n   const { getDruglist } = useContext(druglistContext);\r\n   const [_, dispatch] = useStateContext();\r\n   const onDelete = useCallback(() => {\r\n      setLoading(true);\r\n      fetch(\"/api/druglist\", {\r\n         method: \"DELETE\",\r\n         body: JSON.stringify({ _id: row.id }),\r\n         headers: { \"Content-Type\": \"application/json\" },\r\n      }).then(() => {\r\n         getDruglist().then(() => {\r\n            setLoading(false);\r\n         });\r\n      });\r\n      dispatch({ \"delete-row\": row.id });\r\n   }, [dispatch]);\r\n   return (\r\n      <>\r\n         {row.items.map((cell, i) => (\r\n            <td>\r\n               <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  value={cell}\r\n                  onChange={(e) =>\r\n                     dispatch({\r\n                        \"set-cell-value\": {\r\n                           rowId: row.id,\r\n                           colNo: i,\r\n                           value: e.target.value,\r\n                        },\r\n                     })\r\n                  }\r\n               />\r\n            </td>\r\n         ))}\r\n         <td>\r\n            <button className=\"btn\" onClick={() => onDelete()}>\r\n               Delete\r\n            </button>\r\n         </td>\r\n      </>\r\n   );\r\n});\r\n\r\nexport default TableRow;\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport druglistContext from \"../../context/druglist/druglistContext\";\r\nimport { useStateContext } from \"../../context/table/useStateContent\";\r\n\r\nimport TableRow from \"./TableRow\";\r\nconst headings = [\r\n   \"Sr. No\",\r\n   \"Drug Name\",\r\n   \"Alternate Name\",\r\n   \"Category\",\r\n   \"Sub Category\",\r\n   \"Chapter\",\r\n];\r\n\r\nconst convertDataToRow = (data) => {\r\n   return {\r\n      id: data._id,\r\n      items: [\r\n         data.drug[0],\r\n         data.alternateName[0],\r\n         data.catagory,\r\n         data.subCatagory,\r\n         data.chapter,\r\n      ],\r\n   };\r\n};\r\n\r\nconst convertRowToData = (row) => {\r\n   return {\r\n      _id: row.id,\r\n      drug: [row.items[0]],\r\n      alternateName: [row.items[1]],\r\n      catagory: row.items[2],\r\n      subCatagory: row.items[3],\r\n      chapter: row.items[4],\r\n   };\r\n};\r\n\r\n// const compareDrugs = (row, data) => {\r\n//    const newRow = convertDataToRow(data);\r\n//    return JSON.stringify(newRow.items) === JSON.stringify(row.items);\r\n// };\r\n\r\nconst rowsPerPage = 10;\r\nconst EditableTable = () => {\r\n   let { pageno } = useParams();\r\n   pageno = +pageno;\r\n   const history = useHistory();\r\n   const [{ rows }, dispatch] = useStateContext();\r\n   const { druglist, getDruglist } = useContext(druglistContext);\r\n   const [pageNoValue, setPageNoValue] = useState(Number(pageno));\r\n   const [loading, setLoading] = useState(false);\r\n   const onInputValueChange = (rowId, colNo, value) => {\r\n      dispatch({ \"set-cell-value\": { colNo, rowId, value } });\r\n   };\r\n   useEffect(() => {\r\n      dispatch({ \"set-rows\": druglist.map((x) => convertDataToRow(x)) });\r\n   }, [druglist]);\r\n   const saveData = () => {\r\n      setLoading(true);\r\n      const prevRows = new Set(\r\n         druglist.map((x) => JSON.stringify(convertDataToRow(x).items))\r\n      );\r\n\r\n      const drugsChanged = rows.filter(\r\n         (row) => !prevRows.has(JSON.stringify(row.items))\r\n      );\r\n      const transformedData = drugsChanged.map((x) => convertRowToData(x));\r\n      fetch(\"/api/druglist\", {\r\n         body: JSON.stringify({\r\n            drugs: transformedData,\r\n         }),\r\n         method: \"POST\",\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n      }).then((x) => {\r\n         getDruglist().then((x) => {\r\n            setLoading(false);\r\n         });\r\n      });\r\n      console.log(drugsChanged);\r\n   };\r\n   const onDelete = useCallback((rowId) => {\r\n      dispatch({ \"delete-row\": rowId });\r\n   }, []);\r\n\r\n   if (druglist.length === 0 || loading) {\r\n      return (\r\n         <div\r\n            style={{\r\n               height: \"100vh\",\r\n               width: \"100%\",\r\n               display: \"grid\",\r\n               placeItems: \"center\",\r\n            }}\r\n         >\r\n            <i className=\"fas fa-spinner fa-spin fa-5x\"></i>\r\n         </div>\r\n      );\r\n   }\r\n   const goToPage = (pageNo) => {\r\n      history.push(`/edit/${pageNo}`);\r\n      setPageNoValue(pageNo);\r\n   };\r\n   return (\r\n      <div id=\"admin-page\" style={{ flexGrow: 1, padding: \"20px\" }}>\r\n         <div className=\"pagination\">\r\n            <button\r\n               disabled={pageno === \"0\"}\r\n               className=\"pagination-btn btn\"\r\n               onClick={() => {\r\n                  goToPage(Number(pageno) - 1);\r\n               }}\r\n            >\r\n               <i className=\"fas fa-arrow-left\"></i>\r\n            </button>\r\n            <input\r\n               value={pageNoValue}\r\n               type=\"number\"\r\n               className=\"form-control\"\r\n               onKeyUp={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                     goToPage(pageNoValue);\r\n                  }\r\n               }}\r\n               onChange={(e) => setPageNoValue(e.target.value)}\r\n            ></input>\r\n            <button\r\n               disabled={\r\n                  Math.floor(druglist.length / rowsPerPage) === Number(pageno)\r\n               }\r\n               onClick={() => {\r\n                  goToPage(Number(pageno) + 1);\r\n               }}\r\n               className=\"pagination-btn btn\"\r\n            >\r\n               <i className=\"fas fa-arrow-right\"></i>\r\n            </button>\r\n         </div>\r\n         <button\r\n            onClick={() => {\r\n               setLoading(true);\r\n               fetch(\"/api/druglist\", { method: \"PUT\" }).then((x) => {\r\n                  getDruglist().then((x) => {\r\n                     setLoading(false);\r\n                  });\r\n               });\r\n               goToPage(Math.floor(druglist.length / rowsPerPage));\r\n            }}\r\n            className=\"btn w-50 mb-4\"\r\n            style={{\r\n               width: \"50%\",\r\n               margin: \"1rem 50%\",\r\n               transform: \"translate(-50%)\",\r\n            }}\r\n         >\r\n            Add new Drug\r\n         </button>\r\n         <table className=\"table\">\r\n            <thead>\r\n               <tr>\r\n                  {headings.map((h) => (\r\n                     <th>{h}</th>\r\n                  ))}\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows\r\n                  .slice(\r\n                     Number(pageno) * rowsPerPage,\r\n                     (Number(pageno) + 1) * rowsPerPage\r\n                  )\r\n                  .map((row, i) => (\r\n                     <tr>\r\n                        <td>{i}</td>{\" \"}\r\n                        <TableRow\r\n                           onDelete={onDelete}\r\n                           setLoading={setLoading}\r\n                           key={row.id}\r\n                           row={row}\r\n                        ></TableRow>\r\n                     </tr>\r\n                  ))}\r\n            </tbody>\r\n         </table>\r\n         <button\r\n            className=\"btn\"\r\n            style={{\r\n               width: \"50%\",\r\n               margin: \"0 50%\",\r\n               transform: \"translate(-50%)\",\r\n            }}\r\n            onClick={saveData}\r\n         >\r\n            Save\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default React.memo(EditableTable);\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport {\n   BrowserRouter as Router,\n   Route,\n   Switch,\n   HashRouter,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/pages/Home\";\nimport About from \"./components/pages/About\";\nimport Quiz from \"./components/pages/Quiz\";\nimport Chapter from \"./components/pages/Chapter\";\nimport Category from \"./components/pages/Category\";\nimport SubCategory from \"./components/pages/SubCategory\";\nimport Register from \"./components/authentication/Register\";\nimport Login from \"./components/authentication/Login\";\nimport PrivateRoute from \"./components/routing/privateRoute\";\n\nimport AuthenticationState from \"./context/authentication/AuthenticationState\";\nimport DruglistState from \"./context/druglist/DruglistState\";\nimport setAuthenticationToken from \"./utils/setAuthenticationToken\";\nimport \"./App.css\";\nimport EditableTable from \"./components/table/EditableTable\";\nimport { StateContextProvider } from \"./context/table/StateContext\";\nimport druglistContext from \"./context/druglist/druglistContext\";\n\nif (localStorage.token) {\n   setAuthenticationToken(localStorage.token);\n}\n\nconst App = () => {\n   const { getDruglist } = useContext(druglistContext);\n   useEffect(() => {\n      getDruglist();\n   }, []);\n   return (\n      <AuthenticationState>\n         <StateContextProvider>\n            <HashRouter>\n               <Fragment>\n                  <Navbar />\n                  <div>\n                     <Switch>\n                        <PrivateRoute exact path=\"/\" component={Home} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/about\" component={About} />\n                        <Route exact path=\"/quiz\" component={Quiz} />\n                        <Route\n                           exact\n                           path=\"/chapter/:chapter\"\n                           component={Chapter}\n                        />\n                        <Route\n                           exact\n                           path=\"/category/:category\"\n                           component={Category}\n                        />\n                        <Route\n                           exact\n                           path=\"/sub-category/:subCategory\"\n                           component={SubCategory}\n                        />\n\n                        <Route exact path=\"/edit/:pageno\">\n                           <EditableTable></EditableTable>\n                        </Route>\n                     </Switch>\n                  </div>\n               </Fragment>\n            </HashRouter>\n         </StateContextProvider>\n      </AuthenticationState>\n   );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport DruglistState from \"./context/druglist/DruglistState\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <DruglistState>\n         <App />\n      </DruglistState>\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}